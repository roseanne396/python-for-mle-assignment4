name: CI/CD Pipeline

on:
  push:
    branches: [ main, prod ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest mypy pylint
    
    - name: Run tests
      run: |
        pytest tests/ -v
    
    - name: Run MyPy
      run: |
        mypy . --ignore-missing-imports || true
    
    - name: Run Pylint
      run: |
        pylint *.py --disable=all --enable=E || true

  build-and-deploy:
    if: github.ref == 'refs/heads/prod'
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/mleng-sayhi:latest
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Stop and remove existing container if it exists
          docker stop mleng-sayhi-container || true
          docker rm mleng-sayhi-container || true
          
          # Pull latest image
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mleng-sayhi:latest
          
          # Create output directory if it doesn't exist
          sudo mkdir -p /opt/assignment_outputs
          sudo chmod 777 /opt/assignment_outputs
          
          # Run the container with volume mapping
          docker run --name mleng-sayhi-container \
            -v /opt/assignment_outputs:/app/data \
            ${{ secrets.DOCKERHUB_USERNAME }}/mleng-sayhi:latest
