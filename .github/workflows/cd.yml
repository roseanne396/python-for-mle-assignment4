name: CD (prod)

on:
  push:
    branches: ["prod"]
  workflow_dispatch:

env:
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/sayhi:prod-latest

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -V
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest mypy pylint

      - name: Run tests
        run: python -m pytest -q

      - name: Mypy (soft)
        run: mypy app.py || true

      - name: Pylint (soft, app only)
        run: pylint app.py || true

      # Build & push Docker image to Docker Hub
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          no-cache: true


      # SSH to droplet and run the container
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_KEY }}

- name: Deploy on Droplet
  run: |
    SSH_HOST="${{ secrets.DO_HOST }}"
    SSH_USER="${{ secrets.DO_USER }}"
    SSH_PORT="${{ secrets.DO_SSH_PORT || '22' }}"
    IMAGE="${{ env.IMAGE }}"

    ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" <<EOF
    set -e
    # Directory already exists; no sudo needed
    docker pull $IMAGE
    docker rm -f sayhi || true
    docker run --rm \
      -v /opt/assignment_outputs:/app/data \
      --name sayhi $IMAGE
    EOF
